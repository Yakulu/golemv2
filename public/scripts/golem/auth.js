golem.auth = {
  main: {
    controller: function() {
      var credentials, getHash, isAuthorized, l;
      l = golem.config.locale;
      document.title = golem.utils.title(l.AUTHENTIFICATION);
      credentials = {
        login: '8d143618d8af1efbade9dba8b6c93434d98d3da1',
        password: 'db55970eeb626c3e0a00163672ab96aa0ca94572'
      };
      getHash = function(val) {
        var sha;
        sha = new jsSHA(val, 'TEXT');
        return sha.getHash('SHA-1', 'HEX');
      };
      isAuthorized = function(login, password) {
        return getHash(login) === credentials.login && getHash(password) === credentials.password;
      };
      this.send = function(e) {
        var login, password;
        e.preventDefault();
        login = document.getElementsByName('login')[0].value;
        password = document.getElementsByName('password')[0].value;
        if (isAuthorized(login, password)) {
          return golem.initRouting();
        } else {
          return golem.notifications.helpers.error({
            body: 'Mot de passe ou identifiant invalides'
          });
        }
      };
    },
    view: function(ctrl) {
      var l;
      l = golem.config.locale;
      return [
        m('section', {
          "class": 'sixteen wide column'
        }, [
          m('form', {
            "class": 'ui form',
            onsubmit: ctrl.send
          }, [
            m('div.field', [
              m('label', l.LOGIN), m('div', {
                "class": 'ui left labeled icon input'
              }, [
                m('input', {
                  name: 'login',
                  type: 'text',
                  placeholder: l.LOGIN
                }), m('i', {
                  "class": 'icon asterisk'
                })
              ])
            ]), m('div.field', [
              m('label', l.PASSWORD), m('div', {
                "class": 'ui left labeled icon input'
              }, [
                m('input', {
                  name: 'password',
                  placeholder: l.PASSWORD,
                  type: 'password'
                }), m('i', {
                  "class": 'icon lock'
                })
              ])
            ]), m('input', {
              "class": 'ui blue submit button',
              type: 'submit',
              value: l.OK
            })
          ])
        ])
      ];
    }
  }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInB1YmxpYy9zY3JpcHRzL2dvbGVtL2F1dGguY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLEtBQUssQ0FBQyxJQUFOLEdBQ0U7QUFBQSxFQUFBLElBQUEsRUFDRTtBQUFBLElBQUEsVUFBQSxFQUFZLFNBQUEsR0FBQTtBQUNWLFVBQUEscUNBQUE7QUFBQSxNQUFBLENBQUEsR0FBSSxLQUFLLENBQUMsTUFBTSxDQUFDLE1BQWpCLENBQUE7QUFBQSxNQUNBLFFBQVEsQ0FBQyxLQUFULEdBQWlCLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBWixDQUFrQixDQUFDLENBQUMsZ0JBQXBCLENBRGpCLENBQUE7QUFBQSxNQUVBLFdBQUEsR0FDRTtBQUFBLFFBQUEsS0FBQSxFQUFPLDBDQUFQO0FBQUEsUUFDQSxRQUFBLEVBQVUsMENBRFY7T0FIRixDQUFBO0FBQUEsTUFNQSxPQUFBLEdBQVUsU0FBQyxHQUFELEdBQUE7QUFDUixZQUFBLEdBQUE7QUFBQSxRQUFBLEdBQUEsR0FBVSxJQUFBLEtBQUEsQ0FBTSxHQUFOLEVBQVcsTUFBWCxDQUFWLENBQUE7ZUFDQSxHQUFHLENBQUMsT0FBSixDQUFZLE9BQVosRUFBcUIsS0FBckIsRUFGUTtNQUFBLENBTlYsQ0FBQTtBQUFBLE1BVUEsWUFBQSxHQUFlLFNBQUMsS0FBRCxFQUFRLFFBQVIsR0FBQTtlQUNiLE9BQUEsQ0FBUSxLQUFSLENBQUEsS0FBa0IsV0FBVyxDQUFDLEtBQTlCLElBQXdDLE9BQUEsQ0FBUSxRQUFSLENBQUEsS0FBcUIsV0FBVyxDQUFDLFNBRDVEO01BQUEsQ0FWZixDQUFBO0FBQUEsTUFhQSxJQUFDLENBQUEsSUFBRCxHQUFRLFNBQUMsQ0FBRCxHQUFBO0FBQ04sWUFBQSxlQUFBO0FBQUEsUUFBQSxDQUFDLENBQUMsY0FBRixDQUFBLENBQUEsQ0FBQTtBQUFBLFFBQ0EsS0FBQSxHQUFRLFFBQVEsQ0FBQyxpQkFBVCxDQUEyQixPQUEzQixDQUFvQyxDQUFBLENBQUEsQ0FBRSxDQUFDLEtBRC9DLENBQUE7QUFBQSxRQUVBLFFBQUEsR0FBVyxRQUFRLENBQUMsaUJBQVQsQ0FBMkIsVUFBM0IsQ0FBdUMsQ0FBQSxDQUFBLENBQUUsQ0FBQyxLQUZyRCxDQUFBO0FBR0EsUUFBQSxJQUFHLFlBQUEsQ0FBYSxLQUFiLEVBQW9CLFFBQXBCLENBQUg7aUJBQ0UsS0FBSyxDQUFDLFdBQU4sQ0FBQSxFQURGO1NBQUEsTUFBQTtpQkFHRSxLQUFLLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxLQUE1QixDQUFrQztBQUFBLFlBQUEsSUFBQSxFQUFNLHVDQUFOO1dBQWxDLEVBSEY7U0FKTTtNQUFBLENBYlIsQ0FEVTtJQUFBLENBQVo7QUFBQSxJQXdCQSxJQUFBLEVBQU0sU0FBQyxJQUFELEdBQUE7QUFDSixVQUFBLENBQUE7QUFBQSxNQUFBLENBQUEsR0FBSSxLQUFLLENBQUMsTUFBTSxDQUFDLE1BQWpCLENBQUE7YUFDQTtRQUNFLENBQUEsQ0FBRSxTQUFGLEVBQWE7QUFBQSxVQUFFLE9BQUEsRUFBTyxxQkFBVDtTQUFiLEVBQStDO1VBQzdDLENBQUEsQ0FBRSxNQUFGLEVBQVU7QUFBQSxZQUFFLE9BQUEsRUFBTyxTQUFUO0FBQUEsWUFBb0IsUUFBQSxFQUFVLElBQUksQ0FBQyxJQUFuQztXQUFWLEVBQXFEO1lBQ25ELENBQUEsQ0FBRSxXQUFGLEVBQWU7Y0FDYixDQUFBLENBQUUsT0FBRixFQUFXLENBQUMsQ0FBQyxLQUFiLENBRGEsRUFFYixDQUFBLENBQUUsS0FBRixFQUFTO0FBQUEsZ0JBQUUsT0FBQSxFQUFPLDRCQUFUO2VBQVQsRUFBa0Q7Z0JBQ2hELENBQUEsQ0FBRSxPQUFGLEVBQ0U7QUFBQSxrQkFBQSxJQUFBLEVBQU0sT0FBTjtBQUFBLGtCQUNBLElBQUEsRUFBTSxNQUROO0FBQUEsa0JBRUEsV0FBQSxFQUFhLENBQUMsQ0FBQyxLQUZmO2lCQURGLENBRGdELEVBS2hELENBQUEsQ0FBRSxHQUFGLEVBQU87QUFBQSxrQkFBRSxPQUFBLEVBQU8sZUFBVDtpQkFBUCxDQUxnRDtlQUFsRCxDQUZhO2FBQWYsQ0FEbUQsRUFXbkQsQ0FBQSxDQUFFLFdBQUYsRUFBZTtjQUNiLENBQUEsQ0FBRSxPQUFGLEVBQVcsQ0FBQyxDQUFDLFFBQWIsQ0FEYSxFQUViLENBQUEsQ0FBRSxLQUFGLEVBQVM7QUFBQSxnQkFBRSxPQUFBLEVBQU8sNEJBQVQ7ZUFBVCxFQUFrRDtnQkFDaEQsQ0FBQSxDQUFFLE9BQUYsRUFDRTtBQUFBLGtCQUFBLElBQUEsRUFBTSxVQUFOO0FBQUEsa0JBQ0EsV0FBQSxFQUFhLENBQUMsQ0FBQyxRQURmO0FBQUEsa0JBRUEsSUFBQSxFQUFNLFVBRk47aUJBREYsQ0FEZ0QsRUFLaEQsQ0FBQSxDQUFFLEdBQUYsRUFBTztBQUFBLGtCQUFFLE9BQUEsRUFBTyxXQUFUO2lCQUFQLENBTGdEO2VBQWxELENBRmE7YUFBZixDQVhtRCxFQXFCbkQsQ0FBQSxDQUFFLE9BQUYsRUFDRTtBQUFBLGNBQUEsT0FBQSxFQUFPLHVCQUFQO0FBQUEsY0FDQSxJQUFBLEVBQU0sUUFETjtBQUFBLGNBRUEsS0FBQSxFQUFPLENBQUMsQ0FBQyxFQUZUO2FBREYsQ0FyQm1EO1dBQXJELENBRDZDO1NBQS9DLENBREY7UUFGSTtJQUFBLENBeEJOO0dBREY7Q0FERixDQUFBIiwiZmlsZSI6InB1YmxpYy9zY3JpcHRzL2dvbGVtL2F1dGguanMiLCJzb3VyY2VSb290IjoiL3NvdXJjZS8iLCJzb3VyY2VzQ29udGVudCI6WyJnb2xlbS5hdXRoID1cbiAgbWFpbjpcbiAgICBjb250cm9sbGVyOiAtPlxuICAgICAgbCA9IGdvbGVtLmNvbmZpZy5sb2NhbGVcbiAgICAgIGRvY3VtZW50LnRpdGxlID0gZ29sZW0udXRpbHMudGl0bGUgbC5BVVRIRU5USUZJQ0FUSU9OXG4gICAgICBjcmVkZW50aWFscyA9XG4gICAgICAgIGxvZ2luOiAnOGQxNDM2MThkOGFmMWVmYmFkZTlkYmE4YjZjOTM0MzRkOThkM2RhMSdcbiAgICAgICAgcGFzc3dvcmQ6ICdkYjU1OTcwZWViNjI2YzNlMGEwMDE2MzY3MmFiOTZhYTBjYTk0NTcyJ1xuXG4gICAgICBnZXRIYXNoID0gKHZhbCkgLT5cbiAgICAgICAgc2hhID0gbmV3IGpzU0hBIHZhbCwgJ1RFWFQnXG4gICAgICAgIHNoYS5nZXRIYXNoICdTSEEtMScsICdIRVgnXG5cbiAgICAgIGlzQXV0aG9yaXplZCA9IChsb2dpbiwgcGFzc3dvcmQpIC0+XG4gICAgICAgIGdldEhhc2gobG9naW4pIGlzIGNyZWRlbnRpYWxzLmxvZ2luIGFuZCBnZXRIYXNoKHBhc3N3b3JkKSBpcyBjcmVkZW50aWFscy5wYXNzd29yZFxuXG4gICAgICBAc2VuZCA9IChlKSAtPlxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgICAgICAgbG9naW4gPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5TmFtZSgnbG9naW4nKVswXS52YWx1ZVxuICAgICAgICBwYXNzd29yZCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlOYW1lKCdwYXNzd29yZCcpWzBdLnZhbHVlXG4gICAgICAgIGlmIGlzQXV0aG9yaXplZChsb2dpbiwgcGFzc3dvcmQpXG4gICAgICAgICAgZ29sZW0uaW5pdFJvdXRpbmcoKVxuICAgICAgICBlbHNlXG4gICAgICAgICAgZ29sZW0ubm90aWZpY2F0aW9ucy5oZWxwZXJzLmVycm9yKGJvZHk6ICdNb3QgZGUgcGFzc2Ugb3UgaWRlbnRpZmlhbnQgaW52YWxpZGVzJylcbiAgICAgIHJldHVyblxuXG4gICAgdmlldzogKGN0cmwpIC0+XG4gICAgICBsID0gZ29sZW0uY29uZmlnLmxvY2FsZVxuICAgICAgW1xuICAgICAgICBtICdzZWN0aW9uJywgeyBjbGFzczogJ3NpeHRlZW4gd2lkZSBjb2x1bW4nIH0sIFtcbiAgICAgICAgICBtICdmb3JtJywgeyBjbGFzczogJ3VpIGZvcm0nLCBvbnN1Ym1pdDogY3RybC5zZW5kIH0sIFtcbiAgICAgICAgICAgIG0gJ2Rpdi5maWVsZCcsIFtcbiAgICAgICAgICAgICAgbSAnbGFiZWwnLCBsLkxPR0lOXG4gICAgICAgICAgICAgIG0gJ2RpdicsIHsgY2xhc3M6ICd1aSBsZWZ0IGxhYmVsZWQgaWNvbiBpbnB1dCcgfSwgW1xuICAgICAgICAgICAgICAgIG0gJ2lucHV0JyxcbiAgICAgICAgICAgICAgICAgIG5hbWU6ICdsb2dpbidcbiAgICAgICAgICAgICAgICAgIHR5cGU6ICd0ZXh0J1xuICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IGwuTE9HSU5cbiAgICAgICAgICAgICAgICBtICdpJywgeyBjbGFzczogJ2ljb24gYXN0ZXJpc2snIH1cbiAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgXVxuICAgICAgICAgICAgbSAnZGl2LmZpZWxkJywgW1xuICAgICAgICAgICAgICBtICdsYWJlbCcsIGwuUEFTU1dPUkRcbiAgICAgICAgICAgICAgbSAnZGl2JywgeyBjbGFzczogJ3VpIGxlZnQgbGFiZWxlZCBpY29uIGlucHV0JyB9LCBbXG4gICAgICAgICAgICAgICAgbSAnaW5wdXQnLFxuICAgICAgICAgICAgICAgICAgbmFtZTogJ3Bhc3N3b3JkJ1xuICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IGwuUEFTU1dPUkRcbiAgICAgICAgICAgICAgICAgIHR5cGU6ICdwYXNzd29yZCdcbiAgICAgICAgICAgICAgICBtICdpJywgeyBjbGFzczogJ2ljb24gbG9jaycgfVxuICAgICAgICAgICAgICBdXG4gICAgICAgICAgICBdXG4gICAgICAgICAgICBtICdpbnB1dCcsXG4gICAgICAgICAgICAgIGNsYXNzOiAndWkgYmx1ZSBzdWJtaXQgYnV0dG9uJ1xuICAgICAgICAgICAgICB0eXBlOiAnc3VibWl0J1xuICAgICAgICAgICAgICB2YWx1ZTogbC5PS1xuICAgICAgICAgIF1cbiAgICAgICAgXVxuICAgICAgXVxuIl19